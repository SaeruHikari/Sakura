#pragma once

typedef
enum SAKURA_INPUT_MOUSE_TYPES
{
	SAKURA_INPUT_MOUSE_LBUTTON		= 0b00000001,
	SAKURA_INPUT_MOUSE_RBUTTON		= 0b00000010,
} SAKURA_INPUT_MOUSE_TYPES;

typedef
enum CORE_GRAPHICS_API_CONF
{
	SAKURA_DRAW_WITH_D3D12		= 0b00000000,
	SAKURA_DRAW_WITH_VULKAN		= 0b00000001,
	COUNT
} CORE_GRAPHICS_API_CONF;

typedef
enum SAKURA_CORE_COMPONENT_MASKS
{
	SAKURA_CORE_COMPONENT_MASK_NONE		 = 0b00000000,
	SAKURA_CORE_COMPONENT_MASK_GRAPHICS  = 0b00000001,
	SAKURA_CORE_COMPONENT_MASK_AUDIO	 = 0b00000010,
	SAKURA_CORE_COMPONENT_MASK_ALL		 = 0b11111111
}	SAKURA_CORE_COMPONENT_MASKS;

typedef
enum SAKURA_GRAPHICS_CORE_MSGS
{
	SAKURA_GRAPHICS_CORE_MSG_TICK						= 0b0000000001,   // param0: deltaTime
	SAKURA_GRAPHICS_CORE_MSG_DRAW						= (SAKURA_GRAPHICS_CORE_MSG_TICK << 1),	// param...
	SAKURA_GRAPHICS_CORE_MSG_RESIZE						= (SAKURA_GRAPHICS_CORE_MSG_DRAW << 1),	// param0 width, param1 height
	SAKURA_GRAPHICS_CORE_MSG_KEYPRESS					= (SAKURA_GRAPHICS_CORE_MSG_RESIZE << 1),	//
	SAKURA_GRAPHICS_CORE_MSG_KEYRELEASE					= (SAKURA_GRAPHICS_CORE_MSG_KEYPRESS << 1),
	SAKURA_GRAPHICS_CORE_MSG_MOUSEPRESS					= (SAKURA_GRAPHICS_CORE_MSG_KEYRELEASE << 1),
	SAKURA_GRAPHICS_CORE_MSG_MOUSERELEASE				= (SAKURA_GRAPHICS_CORE_MSG_MOUSEPRESS << 1),
	SAKURA_GRAPHICS_CORE_MSG_MOUSEMOVE					= (SAKURA_GRAPHICS_CORE_MSG_MOUSERELEASE << 1),
	SAKURA_GRAPHICS_CORE_MSG_WHEEL						= (SAKURA_GRAPHICS_CORE_MSG_MOUSEMOVE << 1)
}	SAKURA_GRAPHICS_CORE_MSGS;

typedef
enum SAKURA_INPUT_KEY
{
	SAKURA_INPUT_KEYBOARD_Q = 0b0000000001,
	SAKURA_INPUT_KEYBOARD_W = SAKURA_INPUT_KEYBOARD_Q + 1,
	SAKURA_INPUT_KEYBOARD_E = SAKURA_INPUT_KEYBOARD_W + 1,
	SAKURA_INPUT_KEYBOARD_R = SAKURA_INPUT_KEYBOARD_E + 1,
	SAKURA_INPUT_KEYBOARD_T = SAKURA_INPUT_KEYBOARD_R + 1,
	SAKURA_INPUT_KEYBOARD_Y = SAKURA_INPUT_KEYBOARD_T + 1,
	SAKURA_INPUT_KEYBOARD_U = SAKURA_INPUT_KEYBOARD_Y + 1,
	SAKURA_INPUT_KEYBOARD_I = SAKURA_INPUT_KEYBOARD_U + 1,
	SAKURA_INPUT_KEYBOARD_O = SAKURA_INPUT_KEYBOARD_I + 1,
	SAKURA_INPUT_KEYBOARD_P = SAKURA_INPUT_KEYBOARD_O + 1,
	SAKURA_INPUT_KEYBOARD_A = SAKURA_INPUT_KEYBOARD_P + 1,
	SAKURA_INPUT_KEYBOARD_S = SAKURA_INPUT_KEYBOARD_A + 1,
	SAKURA_INPUT_KEYBOARD_D = SAKURA_INPUT_KEYBOARD_S + 1,
	SAKURA_INPUT_KEYBOARD_F = SAKURA_INPUT_KEYBOARD_D + 1,
	SAKURA_INPUT_KEYBOARD_G = SAKURA_INPUT_KEYBOARD_F + 1,
	SAKURA_INPUT_KEYBOARD_H = SAKURA_INPUT_KEYBOARD_G + 1,
	SAKURA_INPUT_KEYBOARD_J = SAKURA_INPUT_KEYBOARD_H + 1,
	SAKURA_INPUT_KEYBOARD_K = SAKURA_INPUT_KEYBOARD_J + 1,
	SAKURA_INPUT_KEYBOARD_L = SAKURA_INPUT_KEYBOARD_K + 1,
	SAKURA_INPUT_KEYBOARD_Z = SAKURA_INPUT_KEYBOARD_L + 1,
	SAKURA_INPUT_KEYBOARD_X = SAKURA_INPUT_KEYBOARD_Z + 1,
	SAKURA_INPUT_KEYBOARD_C = SAKURA_INPUT_KEYBOARD_X + 1,
	SAKURA_INPUT_KEYBOARD_V = SAKURA_INPUT_KEYBOARD_C + 1,
	SAKURA_INPUT_KEYBOARD_B = SAKURA_INPUT_KEYBOARD_V + 1,
	SAKURA_INPUT_KEYBOARD_N = SAKURA_INPUT_KEYBOARD_B + 1,
	SAKURA_INPUT_KEYBOARD_M = SAKURA_INPUT_KEYBOARD_N + 1,
	SAKURA_INPUT_KEYS_COUNT
}SAKURA_INPUT_KEY;