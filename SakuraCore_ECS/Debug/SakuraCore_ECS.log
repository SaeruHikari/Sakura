  SakuraCore_ECS.cpp
  The contents of <concepts> are only available with C++20 or later.
D:\Coding\Sakura\SECSCore\Source\Types\Containers\SChunkList.hpp(11,15): warning C4099: “SECS::SChunk”: 类型名称以前使用“class”现在使用的是“struct”
D:\Coding\Sakura\SECSCore\Source\Types\SEntity.hpp(13): message : 参见“SECS::SChunk”的声明
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(12,15): warning C4099: “SECS::SChunk”: 类型名称以前使用“class”现在使用的是“struct”
D:\Coding\Sakura\SECSCore\Source\Types\Containers\SChunkList.hpp(11): message : 参见“SECS::SChunk”的声明
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(18,23): warning C4099: “SECS::SChunk”: 类型名称以前使用“class”现在使用的是“struct”
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(12): message : 参见“SECS::SChunk”的声明
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(67,17): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(71,15): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(93,26): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(147,13): warning C4018: “>”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(168,21): warning C4018: “>”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(171,22): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(206,25): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(21,2): warning C4099: “SECS::SChunk”: 类型名称以前使用“class”现在使用的是“struct”
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(20): message : 参见“SECS::SChunk”的声明
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(142,18): warning C4018: “>”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(142,64): warning C4018: “>”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(176,25): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(200,25): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\CommandList\SCommand.hpp(7,2): warning C4099: “SECS::SCommand”: 类型名称以前使用“class”现在使用的是“struct”
D:\Coding\Sakura\SECSCore\Source\CommandList\SCommand.hpp(6): message : 参见“SECS::SCommand”的声明
D:\Coding\Sakura\SECSCore\Source\CommandList\SCommand.hpp(11,31): warning C4099: “SECS::SDestoryEntityCommand”: 类型名称以前使用“class”现在使用的是“struct”
D:\Coding\Sakura\SECSCore\Source\CommandList\SCommand.hpp(11): message : 参见“SECS::SDestoryEntityCommand”的声明
D:\Coding\Sakura\SECSCore\Source\Types\SWorld.hpp(129,22): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(218,22): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message : 查看对正在编译的函数 模板 实例化“void SECS::SEntityManager::Each<T,SakuraGraphics::DX12DeviceComponent>(void (__thiscall SakuraGraphics::DX12DeviceInitSystem::* )(SECS::SEntity,SakuraGraphics::DX12DeviceComponent *),T *,const SECS::SArcheTypeList &) noexcept”的引用
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message :         with
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message :         [
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message :             T=SakuraGraphics::DX12DeviceInitSystem
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message :         ]
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message : 在编译 类 模板 成员函数“void SECS::SSystem::ComponentSystemData<SakuraGraphics::DX12DeviceInitSystem,SakuraGraphics::DX12DeviceComponent>::__update_Internal(SECS::SEntityManager *)”时
D:\Coding\Sakura\SakuraCore_ECS\Source\Graphics\System\DX12DeviceInitSystem.hpp(15): message : 查看对正在编译的函数 模板 实例化“void SECS::SSystem::ComponentSystemData<SakuraGraphics::DX12DeviceInitSystem,SakuraGraphics::DX12DeviceComponent>::__update_Internal(SECS::SEntityManager *)”的引用
D:\Coding\Sakura\SakuraCore_ECS\Source\Graphics\System\DX12DeviceInitSystem.hpp(15): message : 查看对正在编译的 类 模板 实例化“SECS::SSystem::ComponentSystemData<SakuraGraphics::DX12DeviceInitSystem,SakuraGraphics::DX12DeviceComponent>”的引用
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(220,23): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(223,24): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(39,23): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(131): message : 查看对正在编译的函数 模板 实例化“SECS::SArcheTypeList SECS::SArcheTypeManager::CompsGetArcheTypes<SakuraGraphics::DX12DeviceComponent>(void)”的引用
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(131): message : 在编译 类 模板 成员函数“void SECS::SSystem::ComponentSystemData<SakuraGraphics::DX12DeviceInitSystem,SakuraGraphics::DX12DeviceComponent>::__collectInfos_Internal(SECS::SEntityManager *,SECS::SArcheTypeManager *)”时
D:\Coding\Sakura\SakuraCore_ECS\Source\Graphics\System\DX12DeviceInitSystem.hpp(15): message : 查看对正在编译的函数 模板 实例化“void SECS::SSystem::ComponentSystemData<SakuraGraphics::DX12DeviceInitSystem,SakuraGraphics::DX12DeviceComponent>::__collectInfos_Internal(SECS::SEntityManager *,SECS::SArcheTypeManager *)”的引用
D:\Coding\Sakura\SECSCore\Source\TemplateUtils\TemplatePackUtils.hpp(118,1): warning C4554: “&”: 检查运算符优先级是否存在的可能的错误；使用括号阐明优先级
D:\Coding\Sakura\SECSCore\Source\TemplateUtils\TemplatePackUtils.hpp(38): message : 查看对正在编译的函数 模板 实例化“void TemplatePackUtils::getHash_Internal<SakuraGraphics::DX12DeviceComponent>(size_t,size_t *)”的引用
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(125): message : 查看对正在编译的函数 模板 实例化“size_t *TemplatePackUtils::GetHashes<SakuraGraphics::DX12DeviceComponent>(void)”的引用
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(125): message : 在编译 类 模板 成员函数“SECS::SSystem::ComponentSystemData<SakuraGraphics::DX12DeviceInitSystem,SakuraGraphics::DX12DeviceComponent>::ComponentSystemData(T *,void (__thiscall SakuraGraphics::DX12DeviceInitSystem::* )(SECS::SEntity,SakuraGraphics::DX12DeviceComponent *))”时
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(125): message :         with
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(125): message :         [
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(125): message :             T=SakuraGraphics::DX12DeviceInitSystem
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(125): message :         ]
D:\Coding\Sakura\SakuraCore_ECS\Source\Graphics\System\DX12DeviceInitSystem.hpp(15): message : 查看对正在编译的函数 模板 实例化“SECS::SSystem::ComponentSystemData<SakuraGraphics::DX12DeviceInitSystem,SakuraGraphics::DX12DeviceComponent>::ComponentSystemData(T *,void (__thiscall SakuraGraphics::DX12DeviceInitSystem::* )(SECS::SEntity,SakuraGraphics::DX12DeviceComponent *))”的引用
D:\Coding\Sakura\SakuraCore_ECS\Source\Graphics\System\DX12DeviceInitSystem.hpp(15): message :         with
D:\Coding\Sakura\SakuraCore_ECS\Source\Graphics\System\DX12DeviceInitSystem.hpp(15): message :         [
D:\Coding\Sakura\SakuraCore_ECS\Source\Graphics\System\DX12DeviceInitSystem.hpp(15): message :             T=SakuraGraphics::DX12DeviceInitSystem
D:\Coding\Sakura\SakuraCore_ECS\Source\Graphics\System\DX12DeviceInitSystem.hpp(15): message :         ]
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(193,25): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(109): message : 查看对正在编译的函数 模板 实例化“int SECS::SArcheType::GetComponentIndex<T>(void)”的引用
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(109): message :         with
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(109): message :         [
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(109): message :             T=SakuraGraphics::DX12DeviceComponent
D:\Coding\Sakura\SECSCore\Source\Types\SChunk.hpp(109): message :         ]
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(217): message : 查看对正在编译的函数 模板 实例化“T *SECS::SChunk::__getCompPtr<SakuraGraphics::DX12DeviceComponent>(size_t) noexcept”的引用
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(217): message :         with
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(217): message :         [
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(217): message :             T=SakuraGraphics::DX12DeviceComponent
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(217): message :         ]
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message : 查看对正在编译的函数 模板 实例化“void SECS::SEntityManager::Each<T,SakuraGraphics::DX12DeviceComponent>(void (__thiscall SakuraGraphics::DX12DeviceInitSystem::* )(SECS::SEntity,SakuraGraphics::DX12DeviceComponent *),T *,const SECS::SArcheTypeList &) noexcept”的引用
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message :         with
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message :         [
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message :             T=SakuraGraphics::DX12DeviceInitSystem
D:\Coding\Sakura\SECSCore\Source\Types\SSystem.h(139): message :         ]
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(254,25): warning C4018: “<”: 有符号/无符号不匹配
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(129): message : 查看对正在编译的函数 模板 实例化“void SECS::SArcheType::Init<SakuraGraphics::DX12DeviceComponent>(SECS::SEntity *)”的引用
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(66): message : 查看对正在编译的函数 模板 实例化“SECS::SArcheType *SECS::SArcheTypeManager::CreateArcheType<SakuraGraphics::DX12DeviceComponent>(SECS::SEntity *)”的引用
D:\Coding\Sakura\SECSCore\Source\Managers\SEntityManager.hpp(39): message : 查看对正在编译的函数 模板 实例化“SECS::SArcheType *SECS::SArcheTypeManager::GetArcheType<SakuraGraphics::DX12DeviceComponent>(SECS::SEntity *)”的引用
D:\Coding\Sakura\SECSCore\Source\Types\SWorld.hpp(41): message : 查看对正在编译的函数 模板 实例化“SECS::SEntity SECS::SEntityManager::CreateEntity<SakuraGraphics::DX12DeviceComponent>(SECS::SArcheTypeManager *) noexcept”的引用
D:\Coding\Sakura\SakuraCore_ECS\Source\SakuraCore_ECS.cpp(12): message : 查看对正在编译的函数 模板 实例化“SECS::SEntity SECS::SWorld::CreateEntity<SakuraGraphics::DX12DeviceComponent>(void)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message : 查看对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::tuple<const unsigned int &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<unsigned int>)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :             _Kty=size_t,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :             _Ty=SECS::SArcheTypeList,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :             _Tuple1=std::tuple<const unsigned int &>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :             _Tuple2=std::tuple<>
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message : 查看对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::tuple<const unsigned int &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<unsigned int>)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :             _Kty=size_t,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :             _Ty=SECS::SArcheTypeList,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :             _Tuple1=std::tuple<const unsigned int &>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :             _Tuple2=std::tuple<>
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple(894): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(757): message : 查看对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<const unsigned int&,>(std::piecewise_construct_t,std::tuple<const unsigned int &>,std::tuple<>)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(757): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(757): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(757): message :             _Kty=size_t,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(757): message :             _Ty=SECS::SArcheTypeList
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(757): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(758): message : 查看对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<const unsigned int&,>(std::piecewise_construct_t,std::tuple<const unsigned int &>,std::tuple<>)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(758): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(758): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(758): message :             _Kty=size_t,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(758): message :             _Ty=SECS::SArcheTypeList
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory(758): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(539): message : 查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const unsigned int &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const unsigned int &> &&,std::tuple<> &&)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(539): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(539): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(539): message :             _Alloc=std::allocator<std::_List_node<std::pair<const size_t,SECS::SArcheTypeList>,std::_Default_allocator_traits<std::allocator<std::pair<const size_t,SECS::SArcheTypeList>>>::void_pointer>>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(539): message :             _Ty=std::pair<const size_t,SECS::SArcheTypeList>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(539): message :             _Objty=std::pair<const size_t,SECS::SArcheTypeList>
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(539): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(541): message : 查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const unsigned int &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const unsigned int &> &&,std::tuple<> &&)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(541): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(541): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(541): message :             _Alloc=std::allocator<std::_List_node<std::pair<const size_t,SECS::SArcheTypeList>,std::_Default_allocator_traits<std::allocator<std::pair<const size_t,SECS::SArcheTypeList>>>::void_pointer>>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(541): message :             _Ty=std::pair<const size_t,SECS::SArcheTypeList>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(541): message :             _Objty=std::pair<const size_t,SECS::SArcheTypeList>
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list(541): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(825): message : 查看对正在编译的函数 模板 实例化“std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_List_node_emplace_op2<const std::piecewise_construct_t&,std::tuple<const unsigned int &>,std::tuple<>>(_Alnode &,const std::piecewise_construct_t &,std::tuple<const unsigned int &> &&,std::tuple<> &&)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(825): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(825): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(825): message :             _Kty=size_t,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(825): message :             _Ty=SECS::SArcheTypeList,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(825): message :             _Alloc=std::allocator<std::pair<const size_t,SECS::SArcheTypeList>>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(825): message :             _Alnode=std::allocator<std::_List_node<std::pair<const size_t,SECS::SArcheTypeList>,std::_Default_allocator_traits<std::allocator<std::pair<const size_t,SECS::SArcheTypeList>>>::void_pointer>>
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(825): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(834): message : 查看对正在编译的函数 模板 实例化“std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_List_node_emplace_op2<const std::piecewise_construct_t&,std::tuple<const unsigned int &>,std::tuple<>>(_Alnode &,const std::piecewise_construct_t &,std::tuple<const unsigned int &> &&,std::tuple<> &&)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(834): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(834): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(834): message :             _Kty=size_t,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(834): message :             _Ty=SECS::SArcheTypeList,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(834): message :             _Alloc=std::allocator<std::pair<const size_t,SECS::SArcheTypeList>>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(834): message :             _Alnode=std::allocator<std::_List_node<std::pair<const size_t,SECS::SArcheTypeList>,std::_Default_allocator_traits<std::allocator<std::pair<const size_t,SECS::SArcheTypeList>>>::void_pointer>>
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xhash(834): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::_Try_emplace<const unsigned int&,>(_Keyty)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Kty=size_t,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Ty=SECS::SArcheTypeList,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Alloc=std::allocator<std::pair<const size_t,SECS::SArcheTypeList>>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Hasher=std::hash<size_t>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Keyeq=std::equal_to<size_t>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Keyty=const unsigned int &
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::_Try_emplace<const unsigned int&,>(_Keyty)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Kty=size_t,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Ty=SECS::SArcheTypeList,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Alloc=std::allocator<std::pair<const size_t,SECS::SArcheTypeList>>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Hasher=std::hash<size_t>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Keyeq=std::equal_to<size_t>,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :             _Keyty=const unsigned int &
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(433): message :         ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(432): message : 在编译 类 模板 成员函数“std::vector<SECS::SArcheType *,std::allocator<_Ty>> &std::unordered_map<size_t,SECS::SArcheTypeList,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,std::vector<_Ty,std::allocator<_Ty>>>>>::operator [](const unsigned int &)”时
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(432): message :         with
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(432): message :         [
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(432): message :             _Ty=SECS::SArcheType *,
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(432): message :             _Kty=size_t
C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\unordered_map(432): message :         ]
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(107): message : 查看对正在编译的函数 模板 实例化“std::vector<SECS::SArcheType *,std::allocator<_Ty>> &std::unordered_map<size_t,SECS::SArcheTypeList,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,std::vector<_Ty,std::allocator<_Ty>>>>>::operator [](const unsigned int &)”的引用
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(107): message :         with
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(107): message :         [
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(107): message :             _Ty=SECS::SArcheType *,
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(107): message :             _Kty=size_t
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(107): message :         ]
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(23): message : 查看对正在编译的 类 模板 实例化“std::unordered_map<size_t,SECS::SArcheTypeList,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的引用
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(23): message :         with
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(23): message :         [
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(23): message :             _Kty=size_t,
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(23): message :             _Ty=SECS::SArcheTypeList
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(23): message :         ]
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(218,1): warning C4554: “&”: 检查运算符优先级是否存在的可能的错误；使用括号阐明优先级
D:\Coding\Sakura\SECSCore\Source\Types\SArcheType.hpp(243): message : 查看对正在编译的函数 模板 实例化“void SECS::SArcheType::__init__Internal<SakuraGraphics::DX12DeviceComponent>(void)”的引用
D:\Coding\Sakura\SECSCore\Source\Managers\SArcheTypeManager.hpp(129): message : 查看对正在编译的函数 模板 实例化“void SECS::SArcheType::Init<SakuraGraphics::DX12DeviceComponent>(SECS::SEntity *)”的引用
  SakuraCore_ECS.vcxproj -> D:\Coding\Sakura\Debug\SakuraCore_ECS.dll
  D:\Coding\Sakura\Debug\SakuraCore_ECS.lib
  复制了 1 个文件
  D:\Coding\Sakura\SakuraCore_ECS\Source\SakuraCore_ECS.h
  复制了 1 个文件
  D:\Coding\Sakura\Debug\SakuraCore_ECS.dll
  复制了 1 个文件
  D:\Coding\Sakura\Debug\SakuraCore_ECS.dll
  复制了 1 个文件
  D:\Coding\Sakura\Debug\SakuraCore_ECS.lib
  复制了 1 个文件
  D:\Coding\Sakura\SakuraCore_ECS\Source\SakuraCore_ECS.h
  复制了 1 个文件
  D:\Coding\Sakura\SakuraCore_ECS\Source\SakuraCore_ECS.h
  复制了 1 个文件
